Assignment name  : microshell
Expected files   : *.c *.h
Allowed functions: malloc, free, write, close, fork, waitpid, signal, kill, exit, chdir, execve, dup, dup2, pipe, strcmp, strncmp
--------------------------------------------------------------------------------------

📢 쉘 명령어를 실행하는 것처럼 동작하는 프로그램을 작성하세요

--------------------------------------------------------------------------------------

✔️ 프로그램의 인자 : 실행할 명령어 라인

✔️ 실행 파일의 경로 : 절대 또는 상대 경로인데, 주어진 대로 바로 실행하면 됨
  - minishell이나 pipex처럼 PATH 변수와 하나하나 join해서 실행할 수 있는 파일인지 검사할 필요없다는 뜻 🙂

✔️ "|", ";" 구현 : "|" 앞뒤에 명령어가 있어야 함

✔️ 경로 1개를 인자로 받는 cd 구현 : '-'는 안됨
  - "|" 앞뒤에 올 수 없음
  - cd의 인자가 1개가 아니면 STDERR에 "error: cd: bad arguments\n"를 출력
  - cd가 실패하면 STDERR에 "error: cd: cannot change directory to [경로 이름]\n"를 출력

✔️ 와일드카드(*, ~ 등), 환경변수는 처리하지 않음

✔️ execve와 chdir을 제외한 시스템 콜에서 오류가 발생한다면 STDERR에 "error: fatal\n"를 출력하고 프로그램을 종료

✔️ exece가 실패한다면 STDERR에 "error: cannot execute [실행 파일 이름]\n"을 출력

✔️ 열려 있는 파일의 수를 30개 미만으로 제한하더라도 프로그램에서 수백 개 이상의 "|"를 관리할 수 있어야 함

--------------------------------------------------------------------------------------

💬 프로그램 작동 예시:
$>./microshell /bin/ls "|" /usr/bin/grep microshell ";" /bin/echo i love my microshell
microshell
i love my microshell
$>

💬 Hints:
Don't forget to pass the environment variable to execve

💬 Hints:
Do not leak file descriptors!